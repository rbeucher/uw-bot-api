Here are some things you can ask me to do (I'm kind of lazy for now):

```
# List all of UW-bot's capabilities
@uw-bot commands

# Assign a GitHub user as the sole reviewer of this submission
@uw-bot assign @username as reviewer

# Add a GitHub user to the reviewers of this submission
@uw-bot add @username as reviewer

# Re-invite a reviewer (if they can't update checklists)
@uw-bot re-invite @username as reviewer

# Remove a GitHub user from the reviewers of this submission
@uw-bot remove @username as reviewer

# List of editor GitHub usernames
@uw-bot list editors

# List of reviewers together with programming language preferences and domain expertise
@uw-bot list reviewers

# Change editorial assignment
@uw-bot assign @username as editor

# Set the Model archive DOI at the top of the issue e.g.
@uw-bot set 10.0000/zenodo.00000 as archive

# Set the Model version at the top of the issue e.g.
@uw-bot set v1.0.1 as version

# Open the review issue
@uw-bot start review


EDITORIAL TASKS

# All commands can be run on a non-default branch, to do this pass a custom 
# branch name by following the command with `from branch custom-branch-name`.
# For example:

# Remind an author or reviewer to return to a review after a
# certain period of time (supported units days and weeks)
@uw-bot remind @reviewer in 2 weeks

# Ask Whedon to do a dry run of accepting the paper and depositing with Crossref
@uw-bot recommend-accept

# Ask Whedon to check the references for missing DOIs
@uw-bot check references

# Ask Whedon to check repository statistics for the submitted software
@uw-bot check repository

EiC TASKS

# Invite an editor to edit a submission (sending them an email)
@uw-bot invite @editor as editor

# Reject a paper
@uw-bot reject

# Withdraw a paper
@uw-bot withdraw


```
